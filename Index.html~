<!DOCTYPE html>
<html>
	<head>
		<meta charset = "UTF-8">
		<title>"EVOLUTION HIGHWAY"</title>
		<script src="Blocks.json"></script>
    <script src="Species_Details.json"></script>
    <style>		
/*     SWAP COLOURS FOR: http://tango.freedesktop.org/static/cvs/tango-art-tools/palettes/Tango-Palette.svg 
Colour Listing
Header Background:#555753
Header Text:#73d216
Other Header:#4e9a06
Raw Background:
Box Background:
Button Not selected:
Button Hover:
Button Selected:
*/
    
	/* Header details GOOD. DON'T FUCK WITH IT*/
.header {overflow: hidden;background-color: #555753;height:10vh}
.header a {float: left;text-align: center;padding: 2vh;text-decoration: none;font-size: 3vh; color: #73d216;}
.header-right {float: right;}
.header a.logo {font-size: 4vh;font-weight: bold;color:#73d216 }	
	.button-vis {width:100%;background-color: blue;border: 1; height=2.5vh;color: white;padding: 1vh;text-align: center;text-decoration: none;display: inline-block;font-size:2vh ;cursor: pointer;outline:0}
	
	.button-hover {background-color: white;width:100%;border: none; height=2vh;color: black;text-align: center;text-decoration: none;display: inline-block;font-size: 1.8vh;margin:0.2vh ;cursor: pointer;outline:0;}
	.ref-button-not-selected {background-color: #000000;width:100%;border: none; height=2vh;color: white;text-align: center;text-decoration: none;display: inline-block;font-size:1.8vh;margin:0.2vh;cursor: pointer;outline:0;}
	.ref-button-selected {background-color: #4CAF50;width:100%;border: none; height=2vh;color: white;text-align: center;text-decoration: none;display: inline-block;font-size: 1.8vh;margin:0.2vh ;cursor: pointer;outline:0;}
	.que-button-not-selected {background-color: #000000;width:100%;border: none; height=2vh;color: white;text-align: center;text-decoration: none;display: inline-block;font-size: 1.8vh;margin: 0.2vh;cursor: pointer;outline:0;}
	.que-button-selected {background-color: #800000;width:100%;border: none; height=2vh;color: white;text-align: center;text-decoration: none;display: inline-block;font-size: 1.8vh;margin: 0.2vh;cursor: pointer;outline:0;}
	.button-select-all {background-color: #000000;border: none; height=2.5vh;color: white;padding:0.6vh;text-align: center;text-decoration: none;display: inline-block;font-size: 2vh;cursor: pointer;outline:0;width:100%;}
	
	/* Refrence Selecention GOOD. DON'T FUCK WITH IT*/
	.row:after {content: "";display: table;clear: both;}
	.column{float:left; width: 25%; text-align:center;}
    .container-l{height: 40vh; background-color: rgb(230, 230, 233);padding: 0.3vh;}  
	.selecthead {text-align: center;font-size: 3vh;font-weight: 600;color:#4e9a06; padding:0.3vw;}
	.selecthead_black {text-align: center;font-size: 2.2vh;font-weight: 600; padding:0.3vw;}
	.selecthead_small {text-align: center;font-size: 2.2vh;font-weight: 600;color:#4e9a06;padding:0.3vw;}
	.box {height: 32vh; padding=0; color: rgb(116, 124, 142);font-size: 2.2vw;overflow-y: scroll;overflow-x: hidden;}
	.insidebox{ text-align:center; padding:0px;font-size: 1.5vh}
	.box_data {height: 9vh; padding:0px; color: rgb(0, 0, 0);font-size:1.5vh;overflow-y: scroll;overflow-x: hidden;}
	/*This section contains the chromsome details */
	.chrcontain {position: relative;width: 100%;overflow-y: scroll;}
</style>
</head>
   
<body>   
<!--    This section presents all of the header details.FULLY FUNCTIONAL-->
<div class="header" id = "Title">
    <a href="#default" class="logo">Evolution Highway</a>
    <div class="header-right">
        <a href="#home">Help</a>  
        <a href="https://www.rvc.ac.uk/about/our-people/denis-larkin#tab-research">About Our Lab</a>	  
    </div>
</div>
     	
<!--      	AREA CONTAINS SLECTION BOXES. -->
<div class="row">
<!--      	REGION FOR SELECTION OF DIFFERENT Refrences -->
	<div class="column">
  		<div class="container-l">
			<div class="selecthead">Reference Selection</div>
			<div class="box" ><ul id = "Refrences" class="insidebox"></ul>
			</div>
		</div>
	</div>
<!--      	REGION FOR SELECTION OF DIFFERENT Queries -->	
	<div class="column">
   		<div class="container-l">
			<div class="selecthead">Query Selection</div>
			<div class="box" >
				<ul id = "Queries" class="insidebox"></ul>
			</div>
		</div> 
	</div>
	<div class="column">
   		<div class="container-l">
			<div class="selecthead_small">References</div>
            <div class="box_data" >
				<ul id = "SELECTED_REFRENCES" class="insidebox"></ul>
			</div>
			<div class="selecthead_small">Chromsomes</div>
			<div class="box_data" >
				<ul id = "SELECTED_CHROMOSOMES" class="insidebox"></ul>
			</div>
			<div class="selecthead_small">Queries</div>
			<div class="box_data" >
				<ul id = "SELECTED_SPECIES" class="insidebox"></ul>
			</div>			
		</div> 
	</div>
  
    <div class="column">
   		<div class="container-l">
			<div class="selecthead">Options and Commands</div>
			<div class="box" >
				<ul id = "Options" class="insidebox">
				<div >					<button class="button-select-all" onClick="window.location.reload();">RESET</button></div>

					<br>	
				<text id="But_head"></text>
				<div id="SA_BUTTON" ></div>
				<br>
				<div id="SAQ_BUTTON" ></div>
			
				To Progress:
				<div id="OPEN_WINDOW" class="ref-button-not-selected">    </div>
				</ul>
			</div>
		</div> 
	</div>
</div>

<!--    This section presents all of the Refrence Chromosomes. womp womp. -->
<div>
	<br>
	<text class="selecthead" >Chromosome Selection</text><br>
	<text class="selecthead_small" id="reft_dis_spe"></text>
	<text class="selecthead_black" id="ref_dis_spe"></text>
	<text class="selecthead_small" id="reft_dis_chr"></text>
	<text class="selecthead_black" id="ref_dis_chr"></text>
	<text class="selecthead_small" id="quet_dis_spe"></text>
	<text class="selecthead_black" id="que_dis_spe"></text>
	<text class="selecthead_small" id="quet_dis_chr"></text>
	<text class="selecthead_black" id="que_dis_chr"></text>
    
	<div id="RefChromosomes_box" class="chrcontain">
		<svg id="RefChromosomes" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" height="300" width=100% ></svg>
	</div>
</div>
	
 <script>
// Get all the refrences from Block.json
var All_Refrences=[];//Array containing all available refrences
var Refrence_Taxids = [];//Array lcontiang selected refrences
var Selected_Ref_taxa="";//Last seleted refrence
var Query_Taxids=[];
var Selected_Query_taxa="";
var Dis_Queries=[];//Currently displayed Chromsomes
var Selected_Chr=[];
var Queries_avail=[];
var Chr_avail=[];
var svgNS = "http://www.w3.org/2000/svg";  
var Chromosomes = [];
var Dis_Chromsomes=[];//Currently displayed Chromsomes
var Positions = [];
var Selected_Chromsomes = [];//Selected Chromosomes for comparison
var basechrcolour="#d3d7cf";
var highlightcolour="#edd400";
// #######################################
// This function lists all of the data into Selected Chrome and selected 
function CLEANUP(){
// This one just fixes any query reference and chromesome colour and listing problems
//Loop over refrences. Ensure colour is correct and that selection is appropriate

//Loop over queries. Ensure refrence is selected for each ensure colour is correct

//Loop over chromosomes. Ensure refrence is selected for each ensure colour is correct
	if(Selected_Chromsomes.length >0){
		for(var L=Selected_Chromsomes.length-1;  L >= 0; L--){
			tempdisplay=Selected_Chromsomes[L].split("_wow_");
			if (!Refrence_Taxids.includes(tempdisplay[0])){
				Selected_Chromsomes.splice(L, 1);
			}
		}
	}
}
function MAKE_CHR_BTN(){
	var buttono = document.createElement("BUTTON");
	buttono.innerHTML = "Select All Chromsomes"; 
	buttono.setAttributeNS(null,"class","button-select-all");
	buttono.setAttributeNS(null,"id","CHR_SELECT_ALL");
	// On Click
	buttono.onclick = function(){
		var temptest=false;
		for (var i = 0; i < Dis_Chromsomes.length; i++){	
			if (Selected_Chromsomes.includes(Dis_Chromsomes[i])){ 
				document.getElementById(Dis_Chromsomes[i]).setAttributeNS(null,"fill",highlightcolour)
				document.getElementById(Dis_Chromsomes[i]).setAttributeNS(null,"stroke-width",4);
			}else{
				temptest=true;
				Selected_Chromsomes.push(Dis_Chromsomes[i]);
				document.getElementById(Dis_Chromsomes[i]).setAttributeNS(null,"fill",highlightcolour)
				document.getElementById(Dis_Chromsomes[i]).setAttributeNS(null,"stroke-width",4);
			}		
		}
		if (temptest==false){
			for (var i = 0; i < Dis_Chromsomes.length; i++){
				if (Selected_Chromsomes.includes(Dis_Chromsomes[i])){ 
					document.getElementById(Dis_Chromsomes[i]).setAttributeNS(null,"fill",basechrcolour)
					document.getElementById(Dis_Chromsomes[i]).setAttributeNS(null,"stroke-width",1);
					var index = Selected_Chromsomes.indexOf(Dis_Chromsomes[i]);
					Selected_Chromsomes.splice(index, 1);
				}
			}
		}
	OUTPUT_DATA();
	}
	document.getElementById("SA_BUTTON").appendChild(buttono);  
}
function MAKE_QUE_BTN(){
	var buttono = document.createElement("BUTTON");
	buttono.innerHTML = "Select all Queries"; 
	buttono.setAttributeNS(null,"class","button-select-all");
	buttono.setAttributeNS(null,"id","QUE_SELECT_ALL");
	// On Click
	buttono.onclick = function(){
		var temptest=false;
		for (var i = 0; i < Dis_Queries.length; i++){	
			if (Query_Taxids.includes(Dis_Queries[i])){ 
				document.getElementById(Dis_Queries[i]).setAttributeNS(null,"class","que-button-selected");
			}else{
				document.getElementById(Dis_Queries[i]).setAttributeNS(null,"class","que-button-selected");
				temptest=true;	
				Query_Taxids.push(Dis_Queries[i]);
			}		
		}
		if (temptest==false){
			for (var i = 0; i < Dis_Queries.length; i++){
				if (Query_Taxids.includes(Dis_Queries[i])){ 
					document.getElementById(Dis_Queries[i]).setAttributeNS(null,"class","que-button-not-selected");
					var index = Query_Taxids.indexOf(Dis_Queries[i]);
					Query_Taxids.splice(index, 1);
				}
			}
			Selected_Query_taxa="";
		}
		OUTPUT_DATA();
	}
	document.getElementById("SAQ_BUTTON").appendChild(buttono);  
}
function SET_Titles(){
//This function sets the titles of the Chromosome Selection
	if (Selected_Ref_taxa==""){
		document.getElementById("reft_dis_spe").innerHTML="";
		document.getElementById("ref_dis_spe").innerHTML="";
	}else{
		document.getElementById("reft_dis_spe").innerHTML="Reference:";
		document.getElementById("ref_dis_spe").innerHTML=Selected_Ref_taxa.substr(1);
	}
	if (Selected_Query_taxa==""){
		document.getElementById("quet_dis_spe").innerHTML="";
		document.getElementById("que_dis_spe").innerHTML="";
	}else{
		document.getElementById("quet_dis_spe").innerHTML="Query:";
		var temparray=Selected_Query_taxa.split("_wow_");
		document.getElementById("que_dis_spe").innerHTML=temparray[1].substr(1);
	}
}
function OUTPUT_DATA(){
	SET_Titles();
   	CLEANUP(); 
	Populate_Queries();
	if (Selected_Ref_taxa!=""){
 		var element = document.getElementById("CHR_SELECT_ALL");
		if (typeof(element) != 'undefined' && element != null){
			document.getElementById("CHR_SELECT_ALL").remove();
		}
 		var element2 = document.getElementById("QUE_SELECT_ALL");
		if (typeof(element2) != 'undefined' && element != null){
			document.getElementById("QUE_SELECT_ALL").remove();
		}
    		MAKE_CHR_BTN();
		MAKE_QUE_BTN();
		document.getElementById("But_head").innerHTML="For Current Reference:";
    	}else{
 		document.getElementById("QUE_SELECT_ALL").remove();
 		document.getElementById("CHR_SELECT_ALL").remove();
		document.getElementById("But_head").innerHTML="";
    		
    	}
    	var full_list="";
	var outputarea = document.getElementById("SELECTED_CHROMOSOMES");
	for(var L=0; L < Selected_Chromsomes.length; ++L){
		var tempdisplay=[];
		tempdisplay=Selected_Chromsomes[L].split("_wow_");
		 full_list = full_list + tempdisplay[0].substr(1)+ ":"+ tempdisplay[1]+ ", ";
	} 
        //Outputs the query list
	outputarea.innerHTML=full_list;
	var outputarea = document.getElementById("SELECTED_SPECIES");
	var full_list = "";
	for(var L=0; L<Query_Taxids.length; ++L){
		var anothertest=false;
		tempdisplay=Query_Taxids[L].split("_wow_");
		var namer = tempdisplay[1].substr(1); 
		var temporef=tempdisplay[0].substr(1);
		Species_details.forEach(function (arrayItem) {
		if (arrayItem.Taxid ==namer){
			full_list = full_list + temporef+ ":" +arrayItem.Name+ ", ";
			anothertest=true;
			}
		});
		if (anothertest==false){
			 full_list = full_list + temporef+ ":" + namer+ ", ";
		}
	} 
	outputarea.innerHTML=full_list;
        //Outputs the Refrence list
	outputarea.innerHTML=full_list;
	var outputarea = document.getElementById("SELECTED_REFRENCES");
	var full_list = "";
	for(var L=0; L<Refrence_Taxids.length; ++L){
		var anothertest=false;
		var namer = Refrence_Taxids[L].substr(1); 
		Species_details.forEach(function (arrayItem) {
		if (arrayItem.Taxid ==namer){
			btn.innerHTML = arrayItem.Name;
			full_list = full_list + arrayItem.Name+ "<br>";
			anothertest=true;
			}
		});
		if (anothertest==false){
			 full_list = full_list + namer+ "<br>";
		}
	} 
	outputarea.innerHTML=full_list;
	Draw_Chromosomes();
}
// #######################################
// Populate Refrence List
Blocks_DB.forEach(function (arrayItem) {
    var x = "R" + arrayItem.Taxid;
    All_Refrences.push(x);
});
for (var i = 0; i < All_Refrences.length; i++) {
// Create Button
	var btn = document.createElement("BUTTON");
// 	Make Taxid the ID
	btn.setAttributeNS(null,"id",All_Refrences[i]);
	btn.setAttributeNS(null,"class","ref-button-not-selected");
// 	ADD TEXT
	btn.innerHTML = All_Refrences[i].substr(1); 
	Species_details.forEach(function (arrayItem) {
	if (arrayItem.Taxid ==All_Refrences[i].substr(1)){
		btn.innerHTML = arrayItem.Name;
		}
	});
// On Click
	var todraw=true;//Ensures that only selected refrences have chromsomes displayed
	btn.onclick = function(){
        var a = document.getElementById(this.id);
            // See if it is Refrence. If so change it to #edd400`
		    if (Refrence_Taxids.includes(a.id)){
			if (Selected_Ref_taxa == a.id){ 
				//Remove the chromsomes
				while (document.getElementById("RefChromosomes").lastChild) {
					document.getElementById("RefChromosomes").removeChild(document.getElementById("RefChromosomes").lastChild);
				}
				Chromosomes = [];
				Positions = [];
	    			a.setAttributeNS(null,"class","ref-button-not-selected");	
				var index = Refrence_Taxids.indexOf(a.id);
				if (index > -1) {
					Refrence_Taxids.splice(index, 1);
				}
				Selected_Ref_taxa="";
			}else{
	    			Selected_Ref_taxa=a.id;
				Selected_Query_taxa="";

			}
		}else{
			Refrence_Taxids.push(a.id);
			a.setAttributeNS(null,"class","ref-button-selected");	
	    		Selected_Ref_taxa=a.id;
			Selected_Query_taxa="";
		}		
        Create_Button();
        OUTPUT_DATA();
	}
// 	on mouseover
	btn.onmouseover = function(){
		var a = document.getElementById(this.id);
		a.setAttributeNS(null,"class","button-hover");	
	};
// on mousexit
	btn.onmouseout = function(){
		var a = document.getElementById(this.id);
        if (Refrence_Taxids.includes(a.id)){
			a.setAttributeNS(null,"class","ref-button-selected");	
		}else{
			a.setAttributeNS(null,"class","ref-button-not-selected");	
		}		
    };
// Add the button
    document.getElementById("Refrences").appendChild(btn);  
}
// #######################################
// ADD QUERIES FUNCTION
function Populate_Queries(){
// Remove previous containers
	Dis_Queries=[];//Currently displayed Chromsomes
	const tempnode=document.getElementById("Queries");
  	while (tempnode.firstChild) {
    		tempnode.removeChild(tempnode.firstChild);
  	}	

//REMOVE unused from Query_Taxids 
	for (var i = Query_Taxids.length -1; i >=0; i--) {
   	var tempref=Query_Taxids[i].split("_wow_");
        if (!Refrence_Taxids.includes(tempref[0])){
			Query_Taxids.splice(i,1);
		}		
        }
//Populate available queries from refrence s that are selectd
	for (var i = 0; i < Refrence_Taxids.length; i++) {
        	var tempref = (Refrence_Taxids[i]);
		var title = document.createElement("TEXT"); 
		title.setAttributeNS(null,"class","selecthead_small");
		title.innerHTML = tempref.substr(1); 
        	document.getElementById("Queries").appendChild(title);  
		var Refrence_data="";
        	Blocks_DB.forEach(function (arrayItem) {
			if(arrayItem.Taxid==tempref.substr(1)){
   				Refrence_data=arrayItem.Alignments;
			}
		});
		Refrence_data.forEach(function (arrayItem) {
    			var tempquery = "Q" + arrayItem.Qid;
// Create Button
			var btn = document.createElement("BUTTON");
// 	Make the ID Rtaxid_wow_qtaxid
			tempstringid= tempref + "_wow_" + tempquery;
			if (Refrence_Taxids[i]==Selected_Ref_taxa){
				Dis_Queries.push(tempstringid);
			}
			btn.setAttributeNS(null,"id",tempstringid);
// Set class to match whether it has been selected or not
			if (Query_Taxids.includes(tempstringid)){
				btn.setAttributeNS(null,"class","que-button-selected");
			}else{
				btn.setAttributeNS(null,"class","que-button-not-selected");
			}
// 	ADD TEXT
			btn.innerHTML = tempquery.substr(1); 
			Species_details.forEach(function (arrayItem) {
			if (arrayItem.Taxid ==tempquery.substr(1)){
				btn.innerHTML = arrayItem.Name;
				}
			});
			btn.onclick = function(){
				var a = document.getElementById(this.id);
				var tempsplit=a.id.split("_wow_");
				Selected_Ref_taxa=tempsplit[0];
	// 		See if it is in the array  If so remove it
				if (Query_Taxids.includes(a.id)){
					if (Selected_Query_taxa == a.id){ 
						a.setAttributeNS(null,"class","que-button-not-selected");	
	    					todraw=false;
						Chromosomes = [];
						Positions = [];
						var index = Query_Taxids.indexOf(a.id);
						Query_Taxids.splice(index, 1);
						Selected_Query_taxa="";
					}else{
						Selected_Query_taxa=a.id;
					}
				}else{
					Query_Taxids.push(a.id);
					a.setAttributeNS(null,"class","que-button-selected");	
					Selected_Query_taxa=a.id;
				}
				OUTPUT_DATA();
			}
	// 	on mouseover
			btn.onmouseover = function(){
				var a = document.getElementById(this.id);	
				a.setAttributeNS(null,"class","button-hover");	
			}	
			btn.onmouseout = function(){
				var a = document.getElementById(this.id);
				if (Query_Taxids.includes(a.id)){
					a.setAttributeNS(null,"class","que-button-selected");	
				}else{
					a.setAttributeNS(null,"class","que-button-not-selected");
				}		
			};
			document.getElementById("Queries").appendChild(btn);  

		});
	}
}
// #######################################


// #######################################
function Draw_Chromosomes(){
while (document.getElementById("RefChromosomes").lastChild) {
 	document.getElementById("RefChromosomes").removeChild(document.getElementById("RefChromosomes").lastChild);
}

if (Selected_Ref_taxa!=""){
//Get refrence and query
var tempref="";
var tempque="";
Dis_Chromsomes=[];//Clear old chromsomes
if (Selected_Query_taxa!=""){
	var temparray=Selected_Query_taxa.split("_wow_");
	tempref=temparray[0];
	tempque=temparray[1];
}else{
	tempref=Selected_Ref_taxa;
}
    //Get the chromsome sizes and names
Blocks = [];
//Get the blocks if need be
if (Selected_Query_taxa!=""){
	//Get the blocks 
	var tempqueryselected=[];
	Blocks_DB.forEach(function (arrayItem) {
		if(arrayItem.Taxid==tempref.substr(1)){
			arrayItem.Alignments.forEach(function(newarrayitem){
    				testest=tempque.substr(1);
    				var whydoesntthiswork=newarrayitem.Qid;
    				if(tempque.substr(1) == newarrayitem.Qid){
					Blocks=newarrayitem.Blocks;
				}
			});

		}
	});
 //Get the total size matched to the refrence for each block !
    	var badname=[];
    	var badsize=[];
	for (var m = 0; m < Blocks.length; m++) {
    		var tempname=Blocks[m].QueChr;
    		var tempsize=parseInt(Blocks[m].RefEnd)-parseInt(Blocks[m].RefStart);
    		if (badname.includes(tempname)){
    			var track=badname.indexOf(tempname);
    			badsize[track]=tempsize+badsize[track];
    		}else{
    			badname.push(tempname);
    			var track=badname.indexOf(tempname);
    			badsize[track]=tempsize;
    		}
    		
	}
    	
	var colourblock=[];
    //Get the largest
	var Colour_Array=["#fce94f", "#ef2929", "#fcaf3e", "#e9b96e", "#8ae234","#729fcf", "#ad7fa8", "#f57900", "#c17d11", "#73d216", "#888a85","#555753", "#2e3436", "#3465a4", "#75507b", "#cc0000", "#c4a000", "#ce5c00", "#855902", "#4e9a06", "#204a87", "#5c3566", "#a40000","#00202a", "#f78787", "#173000", "#170720", "#97c4f0", "#301700","#ffd797"];
    	for (var i = 0; i < Colour_Array.length; i++){	
		var j = badsize.indexOf(Math.max(...badsize));
    		var tempname=badname[j];
       		badname.splice(j,1);
       		badsize.splice(j,1);
    		var l = new function(){
    			this.name=tempname;
    			this.colour=Colour_Array[i];
    		}
    		colourblock.push(l); 
	}
    //Populate current blocks with a new field of colour
    	for (var i = 0; i < Blocks.length; i++){	
    		for (var j=0; j < colourblock.length; j++){
		    	if (colourblock[j].name == Blocks[i].QueChr){
		    		Blocks[i].Colour=colourblock[j].colour;
    			}
		}

	}
}


    //color for highlight=#edd400

Chromosomes = [];
Blocks_DB.forEach(function (arrayItem) {
	if(arrayItem.Taxid==tempref.substr(1)){
   		Chromosomes=arrayItem.Chromosomes;
	}
});
//Create list of blocks positions and sizes.
var Length = Chromosomes.length;
// Get the largest size chromsome;    
var Largest=0;
for (var i = 0; i < Chromosomes.length; i++){	
 	if (parseInt(Chromosomes[i].ChrLength) > Largest){   	
		Largest=parseInt(Chromosomes[i].ChrLength);

	}
}
// Paramaters for the determining width
var margins=50;
var chrwidth=30;
var chrspace=10;
var TotalWidth=margins*2+chrwidth*Length+(Length+1)*chrspace;
// Parameters for height
var maxheight=250;
var labelspace=5;
var dotline2=82;
var dotline3=163;
//Other Parameters
var Xaxislabel=125;
var TickX=25;
var Tick3Pos=10;
var Tick2Pos=85;
var Tick1Pos=166;
var Tick0Pos=253;
//Make box the proper size
document.getElementById("RefChromosomes").style.width = TotalWidth;

//Draw farY axis
  	var myline = document.createElementNS(svgNS,"line");
       	myline.setAttributeNS(null,"x1",TotalWidth-margins);
       	myline.setAttributeNS(null,"y1",labelspace);
        myline.setAttributeNS(null,"x2",TotalWidth-margins);
        myline.setAttributeNS(null,"y2",maxheight);
        myline.setAttributeNS(null,"stroke","black");
	myline.setAttributeNS(null,"stroke-width",1);
        document.getElementById("RefChromosomes").appendChild(myline); 			
//Draw Y axis
 	myline = document.createElementNS(svgNS,"line");
       	myline.setAttributeNS(null,"x1",margins);
       	myline.setAttributeNS(null,"y1",labelspace);
       	myline.setAttributeNS(null,"x2",margins);
       	myline.setAttributeNS(null,"y2",maxheight);
       	myline.setAttributeNS(null,"stroke","black");
	myline.setAttributeNS(null,"stroke-width",1);
        document.getElementById("RefChromosomes").appendChild(myline);   			
//Draw X axis
       	myline = document.createElementNS(svgNS,"line");
       	myline.setAttributeNS(null,"x1",margins);
       	myline.setAttributeNS(null,"y1",maxheight);
        myline.setAttributeNS(null,"x2",TotalWidth-margins);
        myline.setAttributeNS(null,"y2",maxheight);
        myline.setAttributeNS(null,"stroke","black");
	myline.setAttributeNS(null,"stroke-width",1);
        document.getElementById("RefChromosomes").appendChild(myline);			
//Draw Top dotted line
	myline = document.createElementNS(svgNS,"line");
	myline.setAttributeNS(null,"x1",margins);
	myline.setAttributeNS(null,"y1",labelspace);
	myline.setAttributeNS(null,"x2",TotalWidth-margins);
	myline.setAttributeNS(null,"y2",labelspace);
	myline.setAttributeNS(null,"stroke","black");
	myline.setAttributeNS(null,"stroke-width",1);
	myline.setAttributeNS(null,"stroke-dasharray","4 4");
	document.getElementById("RefChromosomes").appendChild(myline);	
//Draw twothird dotted line
	myline = document.createElementNS(svgNS,"line");
	myline.setAttributeNS(null,"x1",margins);
       	myline.setAttributeNS(null,"y1",dotline2);
	myline.setAttributeNS(null,"x2",TotalWidth-margins);
	myline.setAttributeNS(null,"y2",dotline2);
	myline.setAttributeNS(null,"stroke","black");
	myline.setAttributeNS(null,"stroke-width",1);
	myline.setAttributeNS(null,"stroke-dasharray","4 4");
	document.getElementById("RefChromosomes").appendChild(myline);				
//Draw onethird dotted line
	myline = document.createElementNS(svgNS,"line");
	myline.setAttributeNS(null,"x1",margins);
	myline.setAttributeNS(null,"y1",dotline3);
	myline.setAttributeNS(null,"x2",TotalWidth-margins);
	myline.setAttributeNS(null,"y2",dotline3);
	myline.setAttributeNS(null,"stroke","black");
	myline.setAttributeNS(null,"stroke-width",1);
	myline.setAttributeNS(null,"stroke-dasharray","4 4");
	document.getElementById("RefChromosomes").appendChild(myline);		
//Draw close Y labeL	
       	var mytext = document.createElementNS(svgNS,"text"); 
	mytext.setAttributeNS(null,"x",labelspace);
       	mytext.setAttributeNS(null,"y",Xaxislabel);
       	mytext.setAttributeNS(null,"font-size","12px");       		 	
        mytext.innerHTML = "Mbp";
	document.getElementById("RefChromosomes").appendChild(mytext);        	
//Draw far Y labeL	
       	var mytext = document.createElementNS(svgNS,"text"); 
	mytext.setAttributeNS(null,"x",TotalWidth+labelspace-margins+5);
       	mytext.setAttributeNS(null,"y",Xaxislabel);
       	mytext.setAttributeNS(null,"font-size","12px");       		 	
        mytext.innerHTML = "Mbp";
	document.getElementById("RefChromosomes").appendChild(mytext);        	
//Calculate labels
	var Tick1=Math.round(Largest/3000000);
	var Tick2=Math.round(Tick1*2);
	var Tick3=Math.round(Largest/1000000);
//Draw near labels
//Draw top tick	label
	mytext = document.createElementNS(svgNS,"text"); 
	mytext.setAttributeNS(null,"x",TickX);
	mytext.setAttributeNS(null,"y",Tick3Pos);
	mytext.setAttributeNS(null,"font-size","10px");       		 	
	mytext.innerHTML = Tick3;
	document.getElementById("RefChromosomes").appendChild(mytext); 
//Draw twothird tick label		
	mytext = document.createElementNS(svgNS,"text"); 
	mytext.setAttributeNS(null,"x",TickX);
	mytext.setAttributeNS(null,"y",Tick2Pos);
	mytext.setAttributeNS(null,"font-size","10px");       		 	
	mytext.innerHTML = Tick2;
	document.getElementById("RefChromosomes").appendChild(mytext); 	
//Draw onethird tick label		
	mytext = document.createElementNS(svgNS,"text"); 
	mytext.setAttributeNS(null,"x",TickX+5);
	mytext.setAttributeNS(null,"y",Tick1Pos);
	mytext.setAttributeNS(null,"font-size","10px");       		 	
	mytext.innerHTML = Tick1;
	document.getElementById("RefChromosomes").appendChild(mytext); 
        //Draw bottom tick label		
	mytext = document.createElementNS(svgNS,"text"); 
	mytext.setAttributeNS(null,"x",TickX+10);
	mytext.setAttributeNS(null,"y",Tick0Pos);
	mytext.setAttributeNS(null,"font-size","10px");       		 	
	mytext.innerHTML = "0";
	document.getElementById("RefChromosomes").appendChild(mytext);         	
//Draw Far labels
//Draw top tick	label
	mytext = document.createElementNS(svgNS,"text"); 
	mytext.setAttributeNS(null,"x",TotalWidth+labelspace-margins);
	mytext.setAttributeNS(null,"y",Tick3Pos);
	mytext.setAttributeNS(null,"font-size","10px");       		 	
	mytext.innerHTML = Tick3;
	document.getElementById("RefChromosomes").appendChild(mytext); 
//Draw twothird tick label		
	mytext = document.createElementNS(svgNS,"text"); 
	mytext.setAttributeNS(null,"x",TotalWidth+labelspace-margins);
	mytext.setAttributeNS(null,"y",Tick2Pos);
	mytext.setAttributeNS(null,"font-size","10px");       		 	
	mytext.innerHTML = Tick2;
	document.getElementById("RefChromosomes").appendChild(mytext); 	
//Draw onethird tick label		
	mytext = document.createElementNS(svgNS,"text"); 
	mytext.setAttributeNS(null,"x",TotalWidth+labelspace-margins);
	mytext.setAttributeNS(null,"y",Tick1Pos);
	mytext.setAttributeNS(null,"font-size","10px");       		 	
	mytext.innerHTML = Tick1;
	document.getElementById("RefChromosomes").appendChild(mytext); 
        //Draw bottom tick label		
	mytext = document.createElementNS(svgNS,"text"); 
	mytext.setAttributeNS(null,"x",TotalWidth+labelspace-margins);
	mytext.setAttributeNS(null,"y",Tick0Pos);
	mytext.setAttributeNS(null,"font-size","10px");       		 	
	mytext.innerHTML = "0";
	document.getElementById("RefChromosomes").appendChild(mytext);         	
//Draw the Chromosomes works, just no click or hover
for (var i = 0; i < Chromosomes.length; i++) {
	myChrome = document.createElementNS(svgNS,"rect");  
	var tempchrome =Chromosomes[i].ChrID;
    	var cID=tempref + "_wow_" + Chromosomes[i].ChrID;
    	Dis_Chromsomes.push(cID);
        myChrome.setAttributeNS(null,"id",cID);
	myChrome.setAttributeNS(null,"x",margins+chrspace*(i+1)+chrwidth*i);
//Calculate the Y Top position (0 for maximum length, 250 for minimum)
// First get the length and divide it by max *250.
	var CHRLENGTH=parseInt(Chromosomes[i].ChrLength)/Largest*maxheight;
	if(CHRLENGTH<10){CHRLENGTH=10;}
	myChrome.setAttributeNS(null,"y",maxheight-CHRLENGTH);
       	myChrome.setAttributeNS(null,"height",CHRLENGTH);
	myChrome.setAttributeNS(null,"rx",1);
	myChrome.setAttributeNS(null,"ry",1);
	myChrome.setAttributeNS(null,"width",chrwidth);
	myChrome.setAttributeNS(null,"stroke","black");

    	if (Selected_Chromsomes.includes(cID)){
    		myChrome.setAttributeNS(null,"fill",highlightcolour);
		myChrome.setAttributeNS(null,"stroke-width",4);
    	}else{
    		myChrome.setAttributeNS(null,"fill",basechrcolour);
		myChrome.setAttributeNS(null,"stroke-width",1);
    	}
// Add on click
	myChrome.onclick = function(){
		var a = document.getElementById(this.id);
		if (Selected_Chromsomes.includes(a.id)){ 
	    		a.setAttributeNS(null,"fill",basechrcolour);	
	    		a.setAttributeNS(null,"stroke-width",1);	
			var index = Selected_Chromsomes.indexOf(a.id);
			Selected_Chromsomes.splice(index, 1);
			
		}else{
			Selected_Chromsomes.push(a.id);
	    		a.setAttributeNS(null,"fill",highlightcolour);	
	    		a.setAttributeNS(null,"stroke-width",4);	
		}		
		OUTPUT_DATA()
	}
	document.getElementById("RefChromosomes").appendChild(myChrome);
// Add text Labels
	var chrtext = document.createElementNS(svgNS,"text"); 
	chrtext.setAttributeNS(null,"x",margins+chrspace*(i+1)+chrwidth*i+chrwidth*.5);
	chrtext.setAttributeNS(null,"style","writing-mode: tb; glyph-orientation-vertical: 180;");
	chrtext.setAttributeNS(null,"y",252);
	chrtext.setAttributeNS(null,"font-size","16px"); 
	chrtext.setAttributeNS(null,"class","textlabel");
	chrtext.innerHTML = Chromosomes[i].ChrID;
	document.getElementById("RefChromosomes").appendChild(chrtext);  

// place the coloured blocks if it is called for
    if (Selected_Query_taxa != ""){
	for (var k = 0; k < Blocks.length; k++) {
//find blocks that are on the current chromsome
		if (Blocks[k].RefChr == tempchrome){
    		//check if it is coloured
//Get the length			
			var BLKlngth=(parseInt(Blocks[k].RefEnd)-parseInt(Blocks[k].RefStart))/Largest*maxheight;
			if(BLKlngth>10 && typeof(Blocks[k].Colour) !== 'undefined'){
//Get the end position //FIX
				var Bend=maxheight-parseInt(Blocks[k].RefEnd)/Largest*maxheight;
				myblock = document.createElementNS(svgNS,"rect");  
        		// Set the id as ref_wow_refchr___Qchr 
				bID=cID + "___" + Blocks[k].QueChr;
				myblock.setAttributeNS(null,"id",bID);
				myblock.setAttributeNS(null,"x",margins+chrspace*(i+1)+chrwidth*i+chrwidth*0.05);
				myblock.setAttributeNS(null,"y",Bend);
	       			myblock.setAttributeNS(null,"height",BLKlngth);
				myblock.setAttributeNS(null,"width",chrwidth*0.9);
				myblock.setAttributeNS(null,"fill",Blocks[k].Colour);
				myblock.setAttributeNS(null,"stroke-width",0.1);
				myblock.onmouseover = function(){
				var a = document.getElementById(this.id);
				var tempsplit=a.id.split("___");	
				var tempsplit2=tempsplit[0].split("_wow_");	

				document.getElementById("reft_dis_chr").innerHTML="Refrence Chromosome:";
				document.getElementById("ref_dis_chr").innerHTML=tempsplit2[1];
				document.getElementById("quet_dis_chr").innerHTML="Query Chromosome:";
				document.getElementById("que_dis_chr").innerHTML=tempsplit[1];
				}	
				myblock.onmouseout = function(){
				document.getElementById("reft_dis_chr").innerHTML="";
				document.getElementById("ref_dis_chr").innerHTML="";
				document.getElementById("quet_dis_chr").innerHTML="";
				document.getElementById("que_dis_chr").innerHTML="";

				}
				myblock.onclick = function(){
					var a = document.getElementById(this.id);
					var tempid=a.id.split("___");
					if (Selected_Chromsomes.includes(tempid[0])){ 
						a.setAttributeNS(null,"fill",basechrcolour);	
						a.setAttributeNS(null,"stroke-width",1);	
						var index = Selected_Chromsomes.indexOf(tempid[0]);
						Selected_Chromsomes.splice(index, 1);
						
					}else{
						Selected_Chromsomes.push(tempid[0]);
						a.setAttributeNS(null,"fill",highlightcolour);	
						a.setAttributeNS(null,"stroke-width",4);	
					}		
					OUTPUT_DATA()
				}

			document.getElementById("RefChromosomes").appendChild(myblock);  
			}

    		}

	}
}
}
// Get longest chromosome name
var longestname=8;
for (var i = 0; i < Chromosomes.length; i++) {
	if (Chromosomes[i].ChrID.length > longestname){
		longestname=Chromosomes[i].ChrID.length;
	}
}
newheight=280+longestname*8;
document.getElementById("RefChromosomes").setAttributeNS(null,"height",newheight);




}
}

function Create_Button(){
	while (document.getElementById("OPEN_WINDOW").lastChild) {
   		document.getElementById("OPEN_WINDOW").removeChild(document.getElementById("OPEN_WINDOW").lastChild);
	}
	var btn = document.createElement("BUTTON");
	btn.innerHTML = "VISUALIZE BLOCKS";
	btn.onclick = function(){
		if (Selected_Chromsomes.length>0 && Selected_Query_taxa && Selected_Ref_taxa){
//ADD MEMORY USAGE STATEMENT HERE.
 			var printotwindow =window.open("http://localhost/BLOCK_VIEW.html");

printotwindow.onload = function() {
	var OUTPUTBLOCKS = [];
	for (var i = 0; i < Blocks_DB.length; i++) {
    		for (var j = 0; j < Query_Taxids.length; j++){
    			var temparray=Query_Taxids[j].split("_wow_");
			var test_ref= temparray[0].substr(1);
    			var test_query=temparray[1].substr(1);
    			if(Blocks_DB[i].Taxid == test_ref){
   		 		var alinments=Blocks_DB[i].Alignments;
    				for (var k = 0; k < alinments.length; k++){
    					if(alinments[k].Qid == test_query){
    						var chnceoutputblocks=alinments[k].Blocks;
						for (var m = 0; m < chnceoutputblocks.length; m++) {
    							for (var p=0; p< Selected_Chromsomes.length; p++){
    								var temparray2=Selected_Chromsomes[p].split("_wow_");
    								var chr_test_ref= temparray2[0].substr(1);
   							 	var chr_test_chr=temparray2[1];
    								if(chr_test_ref==test_ref && chr_test_chr==chnceoutputblocks[m].RefChr){
									var tempobject=chnceoutputblocks[m];
    									tempobject.Ref=test_ref;
    									tempobject.Que=test_query;
    									OUTPUTBLOCKS.push(tempobject);
    								}
    							}
						}
					}
				}
  		  	}
		}
	}
	console.log(OUTPUTBLOCKS);
	printotwindow.RAW_BLOCKS=OUTPUTBLOCKS;
	printotwindow.RAW_QUERY=Query_Taxids;

	console.log(Selected_Chromsomes);
	var OUT_CHROMOSOME=[];
	for (var i = 0; i < Selected_Chromsomes.length; i++) {
    		var temparray2=Selected_Chromsomes[i].split("_wow_");
    		var chr_test_ref= temparray2[0].substr(1);
    		var chr_test_chr=temparray2[1];
		for (var j = 0; j < Blocks_DB.length; j++) {
  			if (Blocks_DB[j].Taxid==chr_test_ref){
				var mytempchromes=Blocks_DB[j].Chromosomes;
    				for (var x =0; x < mytempchromes.length; x++){
					if(mytempchromes[x].ChrID==chr_test_chr){
						mytempchromes[x].ref=chr_test_ref;
    						OUT_CHROMOSOME.push(mytempchromes[x]);
    					}
    				}
    			}
    		}
    	}

console.log(OUT_CHROMOSOME);
//Add Queries for each Chromosome
for (var i = 0; i < OUT_CHROMOSOME.length; i++) {
    OUT_CHROMOSOME[i].que=[];
    	for (var j = 0; j < Query_Taxids.length; j++){
    		var temparray=Query_Taxids[j].split("_wow_");
		var test_ref= temparray[0].substr(1);
    		var test_query=temparray[1].substr(1);
    		if (test_ref == OUT_CHROMOSOME[i].ref){
    //			console.log(OUT_CHROMOSOME[i]);
			if (!OUT_CHROMOSOME[i].que.includes(test_query)){
				OUT_CHROMOSOME[i].que.push(test_query);
    			}
    		}
	}
    }
printotwindow.RAW_CHR=OUT_CHROMOSOME;
printotwindow.make_SVG();
}
// 			
		}else{
			alert("Please select refrence(s), query(s), and chromosome(s)");
// 		
 		} 
	}
	btn.setAttributeNS(null,"class","button-vis");

    document.getElementById("OPEN_WINDOW").appendChild(btn);

};

</script>
</body>
</html>
